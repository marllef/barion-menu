// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id   String @id @default(uuid())
  name String

  code String @unique

  users User[]

  menu       Menu[]
  activeMenu Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("store")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  store   Store?  @relation(fields: [storeId], references: [id])
  storeId String?

  infoContact InfoContact?
  roles       Roles[]      @default([USER])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("user")
}

model InfoContact {
  id Int @id @default(autoincrement())

  ddd String?
  tel String?

  address   Address? @relation(fields: [addressId], references: [id])
  addressId Int?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("info_contact")
}

model Address {
  id Int @id @default(autoincrement())

  address  String
  city     String
  state    String
  district String
  country  String
  zip      String

  infoContact InfoContact[]

  @@map("address")
}

model Menu {
  id   Int    @id @default(autoincrement())
  name String

  store   Store?  @relation(fields: [storeId], references: [id])
  storeId String?

  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("menu")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  foods Product[]

  menu   Menu? @relation(fields: [menuId], references: [id])
  menuId Int?

  active Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("menu_category")
}

model Product {
  id       Int     @id @default(autoincrement())
  name     String
  desc     String?
  price    Decimal
  quantity Int     @default(0)

  tags String[]

  active Boolean @default(false)

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("product")
}

enum Roles {
  ADMIN
  USER
}
